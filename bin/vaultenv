#!/usr/bin/env python
#
# Read an environment variable from the vault server.  Can be used to initialize environment variables.
# First argument should be vault key path
# Optional second argument of variable name, if we want to index into a secret that contains several variables
# Otherwise will return json blob of all secrets at that point
# Will write the secret to stdout, and any other messages to stderr
#
# Example:
# $ export PG_USER=$( vaultenv postgres/user )
# $ export PG_PASS=$( vaultenv postgres/password )

import imp
import sys, os
import json

vault_loader = imp.load_source("vault_loader", "/lib/vault_loader.py")

vault = vault_loader.VaultLoader()
key = sys.argv[1]
inner_key = sys.argv[2]

if key:
    try:
        sys.stderr.write("Fetched {0} from {1}".format(key, vault.addr))
        secret_map = vault.read(key)
        if inner_key and type(secret_map) is dict:
            secret = secret_map[inner_key]
        else:
            secret = json.dumps(secret_map)
        sys.stdout.write(secret)
    except StandardError as e:
        sys.stderr.write("Failed to fetch secret: {}".format(str(e)))
